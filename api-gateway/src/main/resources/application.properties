spring.application.name=api-gateway
server.port=8080

# Definimos las rutas del gateway. Esto se sustituirá en el futuro con el eureka server
#El lb significa carga balanceada, es el prefijo de rutas. Esto permite lograr un enrutamiento dinamico y equilibrado de la carga
spring.cloud.gateway.routes[0].id=inventory-service
spring.cloud.gateway.routes[0].uri=lb://inventory-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/inventory/**

spring.cloud.gateway.routes[1].id=orders-service
spring.cloud.gateway.routes[1].uri=lb://orders-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order/**

spring.cloud.gateway.routes[2].id=products-service
spring.cloud.gateway.routes[2].uri=lb://products-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/product/**

#Euroka client
eureka.client.service-url-default-zone=http://eureka:password@localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance-id:${random.value}}

#Discovery Server routes
spring.cloud.gateway.routes[3].id=discovery-service
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[3].filters[0]=SetPath=/

#Discovery Server Static routes. Que se vean las imagenes y recursos en el servidor eureka
spring.cloud.gateway.routes[4].id=discovery-service-static
spring.cloud.gateway.routes[4].uri=http://localhost:8761
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/**

# Definir el comportamiento de enrutamiento y manipulación de sesiones y tokens de autenticación
spring.cloud.gateway.default-filters[0]=SaveSession
spring.cloud.gateway.default-filters[1]=TokenRelay

#Keycloak

# Verificar la validez de los tokens emitidos por keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8181/realms/microservices-realm

spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.client-id=microservices_client
spring.security.oauth2.client.registration.keycloak.client-secret=ve4JstWDv7cx1Lniny3ZRwZP685u4LQC
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/keycloak

#Actuator routes
#Inventory actuator routes
spring.cloud.gateway.routes[5].id=inventory-service-actuator
spring.cloud.gateway.routes[5].uri=lb://inventory-service/actuator/inventory/**
spring.cloud.gateway.routes[5].predicates[0]=Path=/actuator/inventory/**

#Orders actuator routes
spring.cloud.gateway.routes[6].id=orders-service-actuator
spring.cloud.gateway.routes[6].uri=lb://orders-service/actuator/orders/**
spring.cloud.gateway.routes[6].predicates[0]=Path=/actuator/orders/**

#Products actuator routes
spring.cloud.gateway.routes[7].id=products-service-actuator
spring.cloud.gateway.routes[7].uri=lb://products-service/actuator/products/**
spring.cloud.gateway.routes[7].predicates[0]=Path=/actuator/products/**


#Log
logging.level.root=info
logging.level.org.springframework.cloud.gateway=trace
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator=info

management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator