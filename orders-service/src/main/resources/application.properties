server.port=0
spring.application.name=orders-service

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.datasource.url=jdbc:mysql://localhost:3306/ms_orders
spring.datasource.username=ricardo
spring.datasource.password=testDb123

#Euroka client
eureka.client.service-url-default-zone=http://eureka:password@localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance-id:${random.value}}

#Keycloak
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/microservices-realm/protocol/openid-connect/certs

# Circuit Breaker - Actuator
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator/orders
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

#Resilience4j - Circuit Breaker
resilience4j.circuitbreaker.instances.orders-service.register-health-indicator=true
# Numero de fallas consecutivo
resilience4j.circuitbreaker.instances.orders-service.sliding-window-size=5
# Tipo de ventana deslizante. Recuento de eventos
resilience4j.circuitbreaker.instances.orders-service.sliding-window-type=count_based
# Establecer el umbral de tasa de fallos. % De fallas
resilience4j.circuitbreaker.instances.orders-service.failure-rate-threshold=50
# Duracion de espera en el estado abierto antes de intentar una nueva llamada al servicio externo. Durante este tiempo, no responderá a esa llamada y alnza excepcion
resilience4j.circuitbreaker.instances.orders-service.wait-duration-in-open-state=10s
# Habilitar la transición automática de estados
resilience4j.circuitbreaker.instances.orders-service.automatic-transition-from-open-to-half-open-enabled=true
# Numero maximo de llamadas permitidas en el estado medio abierto
resilience4j.circuitbreaker.instances.orders-service.permitted-number-of-calls-in-half-open-state=3

#Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.retries=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer